// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  name       String
  email      String  @unique
  password   String?
  role       Role    @default(USER)
  picture    String?
  isActive   Status  @default(ACTIVE)
  isVerified Boolean @default(false)
  isDeleted  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  providers Provider[]
  posts     Post[]
  projects  Project[]
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
}

model Provider {
  id         Int    @id @default(autoincrement())
  provider   String
  providerID String
  userId     Int
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  content     Json
  thumbnail   String?
  isPublished Boolean  @default(false)
  views       Int      @default(0)
  featured    Boolean  @default(false)
  tags        String[]
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           Int      @id @default(autoincrement())
  title        String   
  slug         String   @unique
  description  String?
  thumbnails    String[]
  technologies String[]
  features     String[]
  liveUrl      String
  githubUrls   Json?
  isFeatured   Boolean  @default(false)
  ownerId      Int
  owner        User     @relation(fields: [ownerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
